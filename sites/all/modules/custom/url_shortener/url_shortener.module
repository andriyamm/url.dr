<?php

/**
 * Implements hook_menu().
 */
function url_shortener_menu() {
  $items = array();

  $items['url_shortener'] = array(
    'title' => 'Get short url',
    'description' => 'Get short url.',
    'page callback' => 'url_shortener_page',
    'file' => 'url_shortener.form.inc',
    'access callback' => TRUE,
  );

  $items['urls_list'] = array(
    'title' => 'Get list of urls',
    'description' => 'Get list of urls',
    'page callback' => 'url_shortener_list_of_urls',
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * Implementation of hook_theme_registry_alter().
 * Original code from http://drupal.stackexchange.com/a/26796/7542
 */
function url_shortener_theme_registry_alter(&$theme_registry) {
  $mod_path = drupal_get_path('module', 'url_shortener');

  $theme_registry_copy = $theme_registry;
  _theme_process_registry($theme_registry_copy, 'phptemplate', 'theme_engine','', $mod_path);
  $theme_registry += array_diff_key($theme_registry_copy, $theme_registry);

  $hooks = array('page');
  foreach ($hooks as $h) {
    if (!isset($theme_registry[$h]['theme paths'])) {
      $theme_registry[$h]['theme paths'] = array();
    }

    _url_shortener_insert_after_first_element($theme_registry[$h]['theme paths'], $mod_path);
  }
}

function _url_shortener_insert_after_first_element(&$a, $element) {
  if(is_array($a)) {
    $first_element = array_shift($a);
    if ($first_element) {
      array_unshift($a, $first_element, $element);
    }
    else {
      array_unshift($a, $element);
    }
  }
}

/**
 * Implements hook_boot().
 */
function url_shortener_boot() {
  // get query parametrs and check if it is not a short url ???
  if (isset($_GET['q'])) {
    $row = db_query("SELECT url FROM {urls} WHERE  short_url = :q", array(':q' => $_GET['q']))->fetchObject();
    if ($row) {
      _url_shortener_goto($row);
    }
  }
}

/**
 * A heavily modified version of drupal_goto() (which hasn't been bootstrapped during hook_boot()
 */
function _url_shortener_goto($row) {
  if (!$row || (isset($_GET['redirect']) && $_GET['redirect'] == 'false')) {
    return;
  }

  $url = $row->url;

  // Remove newlines from the URL to avoid header injection attacks.
  $url = str_replace(array("\n", "\r"), '', $url);

  // We do not want this while running update.php.
  if (!defined('MAINTENANCE_MODE') || MAINTENANCE_MODE != 'update') {

    // Allow modules to react to the end of the page request before redirecting.
    module_invoke_all('exit', $url);
  }

  // Even though session_write_close() is registered as a shutdown function, we
  // need all session data written to the database before redirecting.
  session_write_close();

  header('Location: ' . $url, TRUE, 301);

  // The "Location" header sends a redirect status code to the HTTP daemon. In
  // some cases this can be wrong, so we make sure none of the code below the
  // drupal_goto() call gets executed upon redirection.
  exit();
}

/**
 * Page callback
 */
function url_shortener_list_of_urls() {

}